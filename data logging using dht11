import machine
import sdcard
import uos
import dht
import utime

# Initialize DHT11 sensor on GPIO 15
dht_sensor = dht.DHT11(machine.Pin(15))

# Initialize chip select (CS) for SD card
cs = machine.Pin(1, machine.Pin.OUT)

# Initialize SPI (clock 1 MHz) for SD card communication
spi = machine.SPI(0,
                  baudrate=1000000,
                  polarity=0,
                  phase=0,
                  bits=8,
                  firstbit=machine.SPI.MSB,
                  sck=machine.Pin(2),
                  mosi=machine.Pin(3),
                  miso=machine.Pin(4))

# Initialize SD card
sd = sdcard.SDCard(spi, cs)
vfs = uos.VfsFat(sd)

# Mount the SD card to /sd
uos.mount(vfs, "/sd")

# Create a CSV file and write headers if it doesn't exist
file_path = "/sd/sensor_log.csv"
try:
    with open(file_path, "r") as file:
        pass  # File exists, do nothing
except OSError:
    with open(file_path, "a") as file:
        file.write("Timestamp,Temperature,Humidity\r\n")

# Main loop to read data and save it
while True:
    try:
        # Read data from DHT11 sensor
        dht_sensor.measure()
        temp = dht_sensor.temperature()
        humidity = dht_sensor.humidity()

        # Get current timestamp (consider using RTC if available)
        timestamp = utime.localtime()
        timestamp_str = "{:04d}-{:02d}-{:02d} {:02d}:{:02d}:{:02d}".format(
            timestamp[0], timestamp[1], timestamp[2], timestamp[3], timestamp[4], timestamp[5]
        )

        # Open the file in append mode and write sensor data
        with open(file_path, "a") as file:
            file.write("{},{},{}\r\n".format(timestamp_str, temp, humidity))

        # Print the sensor data for debugging
        print("Temperature: {}C, Humidity: {}%, Time: {}".format(temp, humidity, timestamp_str))

    except Exception as e:
        print('Failed to read sensor or write to SD card.', e)

    # Delay before the next reading (1 second)
    utime.sleep(1)

